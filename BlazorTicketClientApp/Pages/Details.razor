@page "/details/{id:int}"
@using BlazorTicketClientApp.Components
@using BlazorTicketClientApp.Models
@using BlazorTicketClientApp.Services
@using Shared.Models
@inject ITicketsService ticketsService
@inject IResponsesService responsesService



@if(ticket != null)
{
	<Ticket TicketModel="ticket"/>
}
@if(responses != null) 
{
	@foreach (var response in responses)
	{
		<Response ResponseViewModel="response" />
	}
}

<button @onclick="CreateResponse" class="create-ticket-btn">Create a new ticket</button>
@if(isCreatingResponse && ticket != null)
{
	<div class="form-box">
		<ResponseForm ResponseForTicketId="@ticket.Id"/>
	</div>
}


@code {
	[Parameter]
	public int? Id { get; set; }
	private TicketViewModel? ticket;
	private List<ResponseViewModel>? responses;
	private bool isCreatingResponse;

	protected override async Task OnParametersSetAsync()
	{
		isCreatingResponse = false;
		ticket = await ticketsService.GetTicketByIdAsync((int)Id);
		responses = await responsesService.GetResponesToTicketAsync((int)Id);
	}

	private void CreateResponse()
	{
		isCreatingResponse = !isCreatingResponse;
	}
}
